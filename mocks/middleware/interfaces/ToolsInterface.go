// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ToolsInterface is an autogenerated mock type for the ToolsInterface type
type ToolsInterface struct {
	mock.Mock
}

// GetTimeNowUnix provides a mock function with given fields: hour
func (_m *ToolsInterface) GetTimeNowUnix(hour int) int64 {
	ret := _m.Called(hour)

	var r0 int64
	if rf, ok := ret.Get(0).(func(int) int64); ok {
		r0 = rf(hour)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// GetTimeNowUnixIssued provides a mock function with given fields:
func (_m *ToolsInterface) GetTimeNowUnixIssued() int64 {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// GetUUID provides a mock function with given fields:
func (_m *ToolsInterface) GetUUID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type NewToolsInterfaceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewToolsInterface creates a new instance of ToolsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewToolsInterface(t NewToolsInterfaceT) *ToolsInterface {
	mock := &ToolsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
